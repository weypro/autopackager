name: Release

on:
  push:
    tags:
      - '*'

jobs:
  create-release:
    name: create-release
    runs-on: ubuntu-22.04
    outputs:
      upload_url: ${{ steps.release.outputs.upload_url }}
      my_version: ${{ env.MY_VERSION }}
    steps:
      - name: Get the release version from the tag
        shell: bash
        if: env.MY_VERSION == ''
        run: |
          # Apparently, this is the right way to get a tag name. Really?
          #
          # See: https://github.community/t5/GitHub-Actions/How-to-get-just-the-tag-name/m-p/32167/highlight/true#M1027
          echo "MY_VERSION=${GITHUB_REF#refs/tags/}" >> $GITHUB_ENV
          echo "version is: ${{ env.MY_VERSION }}"
      - name: Create GitHub release
        id: release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ env.MY_VERSION }}
          release_name: ${{ env.MY_VERSION }}


  build:
    name: Build
    needs: create-release
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        build: [linux, linux-arm64, win-msvc, win-gnu]
        include:
        - build: linux
          os: ubuntu-22.04
          target: x86_64-unknown-linux-musl
        - build: linux-arm64
          os: ubuntu-22.04
          target: aarch64-unknown-linux-gnu
        # - build: macos
        #   os: macos-latest
        #   target: x86_64-apple-darwin
        # - build: macos-arm
        #   os: macos-latest
        #   target: aarch64-apple-darwin
        # - build: win-msvc
        #   os: windows-2022
        #   target: x86_64-pc-windows-msvc
        # - build: win-gnu
        #   os: windows-2022
        #   target: x86_64-pc-windows-gnu
        - build: win-gnu
          os: ubuntu-22.04
          target: x86_64-pc-windows-gnu

    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      - name: Install Rust toolchain
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          target: ${{ matrix.target }}
          override: true
      - name: Build target
        uses: actions-rs/cargo@v1
        with:
          use-cross: true
          command: build
          args: --release --target ${{ matrix.target }}
  
      # - name: Build release binary
      #   run: cargo build --release --target ${{ matrix.target }}
      - name: Build archive
        shell: bash
        run: |
            staging="autopackager-${{ needs.create-release.outputs.my_version }}-${{ matrix.target }}"
            mkdir -p "$staging"/{complete,doc}

            # cp {README.md,COPYING,UNLICENSE,LICENSE-MIT} "$staging/"
            # cp {CHANGELOG.md,FAQ.md,GUIDE.md} "$staging/doc/"

            if [ "${{ matrix.os }}" = "windows-2022" ]; then
            cp "target/${{ matrix.target }}/release/autopackager.exe" "$staging/"
            7z a "$staging.zip" "$staging"
            echo "ASSET=$staging.zip" >> $GITHUB_ENV
            else
            # The man page is only generated on Unix systems. ¯\_(ツ)_/¯
            cp "target/${{ matrix.target }}/release/autopackager" "$staging/"
            tar czf "$staging.tar.gz" "$staging"
            echo "ASSET=$staging.tar.gz" >> $GITHUB_ENV
            fi
      - name: Upload release assets
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ needs.create-release.outputs.upload_url }}
          asset_path: ${{ env.ASSET }}
          asset_name: ${{ env.ASSET }}
          asset_content_type: application/octet-stream
